import.to=es # [es、solr]
neo4j.graph.path=output/testdb

external.properties.store.solr.zk=10.0.82.216:2181,10.0.82.217:2181
external.properties.store.solr.collection=pandadb_lzx
log.file.path=pandadb-import-tools/testdata/log/test.log

external.properties.store.es.host=10.0.82.216
external.properties.store.es.port=9200
external.properties.store.es.schema=http
external.properties.store.es.index=pandadb
external.properties.store.es.type=nodes

def neo4jValueToScala(value: Value): Any = {
  value match {
    case v: IntegralValue => v.asInstanceOf[IntegralValue].longValue()
    case v: IntegralArray =>
    v.asInstanceOf[IntegralArray].iterator().map(v2 => v2.asInstanceOf[IntegralValue].longValue()).toArray
    case v: FloatingPointValue => v.asInstanceOf[FloatingPointValue].doubleValue()
    case v: FloatingPointArray =>
    v.asInstanceOf[FloatingPointArray].iterator().map(v2 => v2.asInstanceOf[FloatingPointValue].doubleValue()).toArray
    case v: TextValue => v.asInstanceOf[TextValue].stringValue()
    case v: TextArray =>
    v.asInstanceOf[TextArray].iterator().map(v2 => v2.asInstanceOf[TextValue].stringValue()).toArray
    case v: BooleanValue => v.asInstanceOf[BooleanValue].booleanValue()
    case v: BooleanArray =>
    v.asInstanceOf[BooleanArray].iterator().map(v2 => v2.asInstanceOf[BooleanValue].booleanValue()).toArray
    case v => v.asObject()
  }
}